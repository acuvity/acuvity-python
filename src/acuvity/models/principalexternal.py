"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from acuvity.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PrincipalexternalTypedDict(TypedDict):
    r"""Describes the principal information of an external request."""

    user_claims: NotRequired[List[str]]
    r"""The optional user claims of the request. This can be an incomplete list, and
    claims can be mapped to different keys.
    """
    username: NotRequired[str]
    r"""The optional username of the request."""


class Principalexternal(BaseModel):
    r"""Describes the principal information of an external request."""

    user_claims: Annotated[Optional[List[str]], pydantic.Field(alias="userClaims")] = (
        None
    )
    r"""The optional user claims of the request. This can be an incomplete list, and
    claims can be mapped to different keys.
    """

    username: Optional[str] = None
    r"""The optional username of the request."""
