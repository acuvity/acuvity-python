"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from acuvity.models import AcuvityError
from acuvity.types import BaseModel
import httpx
from typing import Optional
from typing_extensions import TypedDict


class DataTypedDict(TypedDict):
    r"""Additional error data"""


class Data(BaseModel):
    r"""Additional error data"""


class ElementalerrorData(BaseModel):
    code: Optional[int] = None
    r"""Error code"""

    data: Optional[Data] = None
    r"""Additional error data"""

    description: Optional[str] = None
    r"""Error description"""

    subject: Optional[str] = None
    r"""Error subject"""

    title: Optional[str] = None
    r"""Error title"""

    trace: Optional[str] = None
    r"""Error trace"""


class Elementalerror(AcuvityError):
    data: ElementalerrorData

    def __init__(
        self,
        data: ElementalerrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
